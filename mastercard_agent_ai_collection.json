{
    "openapi": "3.1.0",
    "info": {
      "title": "TechStack AI Server",
      "description": "\n/api/v1 helps you do awesome stuff. ðŸš€\n",
      "license": {
        "name": "Apache 2.0",
        "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "0.1.0"
    },
    "paths": {
      "/api/v1": {
        "get": {
          "summary": "Apihome",
          "description": "Returns a dictionary containing information about the application.",
          "operationId": "APIHome_api_v1_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          }
        }
      },
      "/": {
        "get": {
          "summary": "Read Root",
          "operationId": "read_root__get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/html": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/health": {
        "get": {
          "summary": "Apihealth",
          "description": "Returns a dictionary containing information about the application.",
          "operationId": "APIHealth_health_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          }
        }
      },
      "/view-logs/{log_type}/": {
        "get": {
          "summary": "View Logs",
          "description": "Read and return the contents of the specified log file in plain text.\n\nArgs:\n    log_type (str): The type of log to view (info, warning, error).\n\nReturns:\n    PlainTextResponse: The contents of the log file or an error message.",
          "operationId": "view_logs_view_logs__log_type___get",
          "parameters": [
            {
              "name": "log_type",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Log Type"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/logs/chat": {
        "get": {
          "tags": [
            "Chat Logs"
          ],
          "summary": "Get recent chat logs",
          "operationId": "get_chat_logs_api_v1_logs_chat_get",
          "parameters": [
            {
              "name": "room_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Room Id"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "description": "Max number of logs to return (max 100)",
                "default": 50,
                "title": "Limit"
              },
              "description": "Max number of logs to return (max 100)"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Chat Logs Api V1 Logs Chat Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/logs/history": {
        "get": {
          "tags": [
            "Chat Logs"
          ],
          "summary": "Get past conversation history",
          "operationId": "get_conversation_history_logs_api_v1_logs_history_get",
          "parameters": [
            {
              "name": "room_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Room Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Conversation History Logs Api V1 Logs History Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/chat-ai": {
        "post": {
          "summary": "Chat",
          "operationId": "chat_api_v1_chat_ai_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat_Message"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AIMessageResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AIMessageResponse": {
          "properties": {
            "content": {
              "type": "string",
              "title": "Content"
            },
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "usage_metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Usage Metadata"
            },
            "response_metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Response Metadata"
            },
            "additional_kwargs": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Additional Kwargs"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "AIMessageResponse"
        },
        "Chat_Message": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "roomId": {
              "type": "string",
              "title": "Roomid"
            },
            "message": {
              "type": "string",
              "title": "Message"
            }
          },
          "type": "object",
          "required": [
            "roomId",
            "message"
          ],
          "title": "Chat_Message",
          "example": {
            "id": "18",
            "message": "Hello",
            "roomId": "abc123"
          }
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        }
      }
    }
  }